I removed the static stuff in the linker settings (was causing me issues).
Sorry if it's a burden for you, maybe we can talk about it and see if 
there's a better way.

I commented out (with 3 ///) the parts of the programs that don't have
functionality just yet so we can at least run the prog while we do things.

About searching through containers (like drawing enemies and such), you 
might want to apply a check before searching (ie. container isn't empty) 
first. Specifically in CollisionManager's update function.

I also changed the way the Game header works, specifically gameRun() funct.
It just seems like it's taking over the work of main(). Rather than that, 
I'm thinking the class should be controlling the flow of the game, like
what's the current game condition(running, lost, won), levels and so on.

-Olysold

###

I added the static stuff so that running the .exe doesn't require the compiler libraries, but it's not a big deal.

I made a lot of changes before I went to bed, but forgot to sync.. oh well.

shouldn't need to check if the container is empty, since it wouldn't loop.

Yeah, I never did like the way I've seen Game handled but I couldn't think of anything better, your way is pretty nice.

-Z

###

Changed a few things but stuck on setting textures now, since animated sprites only use animations

-Z

###

Animation needs to have frames set (addFrame()). Since the process of setting up an AnimatedSprite is quite delicate,
I left it to getAnimation as the only function that will be returning anything and two other set up functions
to well, set up the animation.

Getting an OpenGl error though, called failed to Texture.cpp(95).

Thinking about the textured entities, I have two suggestions. 

1) They can either be like the textured Player I've set up, a plane-ish figure that would require the head to rotate
to the desired location. Animation would only apply when movement is made.
2) Saucer-like so there's no worry of rotation and Animation is just contantly playing.

-O

###

I'm not getting an OpenGL error, guessing you fixed it.

Rotation is easy, unless animated sprites do it differently.

I changed const shared_ptr to static because const shared_ptr doesn't make sense
shared_ptr is useless if you're not going to share it, it doesn't automatically detect all instances of the class unless its copied.
static will save space and ensure the class is dealing with the same instance of what we've static'ed
we can leave const for the sake of explicity

Bullets stats should depend on what fire it, otherwise bulletDamage of Enemy is useless, etc.

About IDC, the width limit seemed a bit pointless and since we're the only two working on it an initial is fine, don't you think?

~Z